---
openapi: 3.0.1
info:
  title: Menternshift API V1
  version: v1
paths:
  "/api/v1/users/{user_id}/expertises":
    parameters:
    - name: user_id
      in: path
      description: user_id
      required: true
      schema:
        type: string
    get:
      summary: list expertises
      tags:
      - Expertises
      responses:
        '200':
          description: successful
    post:
      summary: create expertise
      tags:
      - Expertises
      parameters: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                domain:
                  type: string
                years_of_experience:
                  type: integer
  "/api/v1/users/{user_id}/expertises/{id}":
    parameters:
    - name: user_id
      in: path
      description: user_id
      required: true
      schema:
        type: string
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: show expertise
      tags:
      - Expertises
      responses:
        '200':
          description: successful
    patch:
      summary: update expertise
      tags:
      - Expertises
      parameters: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                domain:
                  type: string
                years_of_experience:
                  type: integer
    put:
      summary: update expertise
      tags:
      - Expertises
      parameters: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                domain:
                  type: string
                years_of_experience:
                  type: integer
    delete:
      summary: delete expertise
      tags:
      - Expertises
      responses:
        '200':
          description: successful
  "/api/v1/users":
    get:
      summary: list users
      tags:
      - Users
      responses:
        '200':
          description: successful
    post:
      summary: create user
      tags:
      - Users
      parameters: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                first_name:
                  type: string
                last_name:
                  type: string
              required:
              - email
  "/api/v1/users/{id}":
    parameters:
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: show user
      tags:
      - Users
      responses:
        '200':
          description: successful
    patch:
      summary: update user
      tags:
      - Users
      parameters: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                first_name:
                  type: string
                last_name:
                  type: string
    put:
      summary: update user
      tags:
      - Users
      parameters: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                first_name:
                  type: string
                last_name:
                  type: string
    delete:
      summary: delete user
      tags:
      - Users
      responses:
        '200':
          description: successful
servers:
- url: https://localhost:3000/
  variables:
    defaultHost:
      default: localhost:3000
